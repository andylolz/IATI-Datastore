"""empty message

Revision ID: 0f0c33bb91c7
Revises:
Create Date: 2020-12-11 20:24:53.192642

"""
from alembic import op
import sqlalchemy as sa

from iatilib import codelists


# revision identifiers, used by Alembic.
revision = '0f0c33bb91c7'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('dataset',
    sa.Column('name', sa.Unicode(), nullable=False),
    sa.Column('first_seen', sa.DateTime(), nullable=False),
    sa.Column('last_seen', sa.DateTime(), nullable=False),
    sa.Column('last_modified', sa.DateTime(), nullable=True),
    sa.Column('license', sa.Unicode(), nullable=True),
    sa.Column('is_open', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('name')
    )
    op.create_table('deleted_activity',
    sa.Column('iati_identifier', sa.Unicode(), nullable=False),
    sa.Column('deletion_date', sa.Date(), nullable=True),
    sa.PrimaryKeyConstraint('iati_identifier')
    )
    op.create_table('log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('dataset', sa.String(), nullable=True),
    sa.Column('resource', sa.String(), nullable=True),
    sa.Column('logger', sa.String(), nullable=True),
    sa.Column('level', sa.String(), nullable=True),
    sa.Column('trace', sa.String(), nullable=True),
    sa.Column('msg', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('organisation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ref', sa.Unicode(), nullable=False),
    sa.Column('name', sa.Unicode(), nullable=True),
    sa.Column('type', codelists.OrganisationType.db_type(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('ref', 'name', 'type')
    )
    op.create_table('resource',
    sa.Column('url', sa.Unicode(), nullable=False),
    sa.Column('dataset_id', sa.Unicode(), nullable=True),
    sa.Column('last_fetch', sa.DateTime(), nullable=True),
    sa.Column('last_status_code', sa.Integer(), nullable=True),
    sa.Column('last_succ', sa.DateTime(), nullable=True),
    sa.Column('last_parsed', sa.DateTime(), nullable=True),
    sa.Column('last_parse_error', sa.Unicode(), nullable=True),
    sa.Column('document', sa.LargeBinary(), nullable=True),
    sa.Column('etag', sa.Unicode(), nullable=True),
    sa.Column('version', sa.Unicode(), nullable=True),
    sa.ForeignKeyConstraint(['dataset_id'], ['dataset.name'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('url')
    )
    op.create_index(op.f('ix_resource_dataset_id'), 'resource', ['dataset_id'], unique=False)
    op.create_table('activity',
    sa.Column('iati_identifier', sa.Unicode(), nullable=False),
    sa.Column('hierarchy', sa.Integer(), nullable=True),
    sa.Column('default_language', codelists.Language.db_type(), nullable=True),
    sa.Column('last_updated_datetime', sa.DateTime(), nullable=True),
    sa.Column('last_change_datetime', sa.DateTime(), nullable=False),
    sa.Column('resource_url', sa.Unicode(), nullable=True),
    sa.Column('reporting_org_id', sa.Integer(), nullable=True),
    sa.Column('start_planned', sa.Date(), nullable=True),
    sa.Column('start_actual', sa.Date(), nullable=True),
    sa.Column('end_planned', sa.Date(), nullable=True),
    sa.Column('end_actual', sa.Date(), nullable=True),
    sa.Column('title', sa.Unicode(), nullable=False),
    sa.Column('description', sa.Unicode(), nullable=False),
    sa.Column('default_currency', codelists.Currency.db_type(), nullable=True),
    sa.Column('raw_xml', sa.UnicodeText(), nullable=False),
    sa.Column('version', sa.Unicode(), nullable=True),
    sa.Column('major_version', sa.Unicode(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('activity_status', codelists.ActivityStatus.db_type(), nullable=True),
    sa.Column('collaboration_type', codelists.CollaborationType.db_type(), nullable=True),
    sa.Column('default_finance_type', codelists.FinanceType.db_type(), nullable=True),
    sa.Column('default_flow_type', codelists.FlowType.db_type(), nullable=True),
    sa.Column('default_aid_type', codelists.AidType.db_type(), nullable=True),
    sa.Column('default_tied_status', codelists.TiedStatus.db_type(), nullable=True),
    sa.ForeignKeyConstraint(['reporting_org_id'], ['organisation.id'], ),
    sa.ForeignKeyConstraint(['resource_url'], ['resource.url'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('iati_identifier')
    )
    op.create_index(op.f('ix_activity_reporting_org_id'), 'activity', ['reporting_org_id'], unique=False)
    op.create_index(op.f('ix_activity_resource_url'), 'activity', ['resource_url'], unique=False)
    op.create_table('budget',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('activity_id', sa.Unicode(), nullable=False),
    sa.Column('type', codelists.BudgetType.db_type(), nullable=True),
    sa.Column('period_end', sa.Date(), nullable=True),
    sa.Column('period_start', sa.Date(), nullable=True),
    sa.Column('value_currency', codelists.Currency.db_type(), nullable=True),
    sa.Column('value_amount', sa.Numeric(), nullable=True),
    sa.ForeignKeyConstraint(['activity_id'], ['activity.iati_identifier'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_budget_activity_id'), 'budget', ['activity_id'], unique=False)
    op.create_table('participation',
    sa.Column('activity_identifier', sa.Unicode(), nullable=False),
    sa.Column('organisation_id', sa.Integer(), nullable=False),
    sa.Column('role', codelists.OrganisationRole.db_type(), nullable=False),
    sa.ForeignKeyConstraint(['activity_identifier'], ['activity.iati_identifier'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['organisation_id'], ['organisation.id'], ),
    sa.PrimaryKeyConstraint('activity_identifier', 'organisation_id', 'role')
    )
    op.create_table('policy_marker',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('activity_id', sa.Unicode(), nullable=False),
    sa.Column('code', codelists.PolicyMarker.db_type(), nullable=True),
    sa.Column('text', sa.Unicode(), nullable=True),
    sa.ForeignKeyConstraint(['activity_id'], ['activity.iati_identifier'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_policy_marker_activity_id'), 'policy_marker', ['activity_id'], unique=False)
    op.create_index(op.f('ix_policy_marker_code'), 'policy_marker', ['code'], unique=False)
    op.create_table('related_activity',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('activity_id', sa.Unicode(), nullable=False),
    sa.Column('ref', sa.Unicode(), nullable=False),
    sa.Column('text', sa.Unicode(), nullable=True),
    sa.ForeignKeyConstraint(['activity_id'], ['activity.iati_identifier'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_related_activity_activity_id'), 'related_activity', ['activity_id'], unique=False)
    op.create_table('transaction',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ref', sa.Unicode(), nullable=True),
    sa.Column('activity_id', sa.Unicode(), nullable=False),
    sa.Column('description', sa.Unicode(), nullable=True),
    sa.Column('flow_type', codelists.FlowType.db_type(), nullable=True),
    sa.Column('finance_type', codelists.FinanceType.db_type(), nullable=True),
    sa.Column('aid_type', codelists.AidType.db_type(), nullable=True),
    sa.Column('tied_status', codelists.TiedStatus.db_type(), nullable=True),
    sa.Column('disbursement_channel', codelists.DisbursementChannel.db_type(), nullable=True),
    sa.Column('provider_org_id', sa.Integer(), nullable=True),
    sa.Column('provider_org_text', sa.Unicode(), nullable=True),
    sa.Column('provider_org_activity_id', sa.Unicode(), nullable=True),
    sa.Column('receiver_org_id', sa.Integer(), nullable=True),
    sa.Column('receiver_org_text', sa.Unicode(), nullable=True),
    sa.Column('receiver_org_activity_id', sa.Unicode(), nullable=True),
    sa.Column('type', codelists.TransactionType.db_type(), nullable=True),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('value_date', sa.Date(), nullable=True),
    sa.Column('value_amount', sa.Numeric(), nullable=True),
    sa.Column('value_currency', codelists.Currency.db_type(), nullable=True),
    sa.ForeignKeyConstraint(['activity_id'], ['activity.iati_identifier'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['provider_org_id'], ['organisation.id'], ),
    sa.ForeignKeyConstraint(['receiver_org_id'], ['organisation.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_transaction_activity_id'), 'transaction', ['activity_id'], unique=False)
    op.create_table('website',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('activity_id', sa.Unicode(), nullable=False),
    sa.Column('url', sa.Unicode(), nullable=True),
    sa.ForeignKeyConstraint(['activity_id'], ['activity.iati_identifier'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_website_activity_id'), 'website', ['activity_id'], unique=False)
    op.create_table('country_percentage',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('percentage', sa.Numeric(), nullable=True),
    sa.Column('name', sa.Unicode(), nullable=True),
    sa.Column('country', codelists.Country.db_type(), nullable=True),
    sa.Column('activity_id', sa.Unicode(), nullable=True),
    sa.Column('transaction_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['activity_id'], ['activity.iati_identifier'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['transaction_id'], ['transaction.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_country_percentage_activity_id'), 'country_percentage', ['activity_id'], unique=False)
    op.create_index(op.f('ix_country_percentage_country'), 'country_percentage', ['country'], unique=False)
    op.create_index(op.f('ix_country_percentage_transaction_id'), 'country_percentage', ['transaction_id'], unique=False)
    op.create_table('region_percentage',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('percentage', sa.Numeric(), nullable=True),
    sa.Column('name', sa.Unicode(), nullable=True),
    sa.Column('region', codelists.Region.db_type(), nullable=False),
    sa.Column('activity_id', sa.Unicode(), nullable=True),
    sa.Column('transaction_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['activity_id'], ['activity.iati_identifier'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['transaction_id'], ['transaction.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_region_percentage_activity_id'), 'region_percentage', ['activity_id'], unique=False)
    op.create_index(op.f('ix_region_percentage_region'), 'region_percentage', ['region'], unique=False)
    op.create_index(op.f('ix_region_percentage_transaction_id'), 'region_percentage', ['transaction_id'], unique=False)
    op.create_table('sector_percentage',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('text', sa.Unicode(), nullable=True),
    sa.Column('activity_id', sa.Unicode(), nullable=True),
    sa.Column('transaction_id', sa.Integer(), nullable=True),
    sa.Column('sector', codelists.Sector.db_type(), nullable=True),
    sa.Column('vocabulary', codelists.Vocabulary.db_type(), nullable=False),
    sa.Column('percentage', sa.Numeric(), nullable=True),
    sa.ForeignKeyConstraint(['activity_id'], ['activity.iati_identifier'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['transaction_id'], ['transaction.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_sector_percentage_activity_id'), 'sector_percentage', ['activity_id'], unique=False)
    op.create_index(op.f('ix_sector_percentage_sector'), 'sector_percentage', ['sector'], unique=False)
    op.create_index(op.f('ix_sector_percentage_transaction_id'), 'sector_percentage', ['transaction_id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_sector_percentage_transaction_id'), table_name='sector_percentage')
    op.drop_index(op.f('ix_sector_percentage_sector'), table_name='sector_percentage')
    op.drop_index(op.f('ix_sector_percentage_activity_id'), table_name='sector_percentage')
    op.drop_table('sector_percentage')
    op.drop_index(op.f('ix_region_percentage_transaction_id'), table_name='region_percentage')
    op.drop_index(op.f('ix_region_percentage_region'), table_name='region_percentage')
    op.drop_index(op.f('ix_region_percentage_activity_id'), table_name='region_percentage')
    op.drop_table('region_percentage')
    op.drop_index(op.f('ix_country_percentage_transaction_id'), table_name='country_percentage')
    op.drop_index(op.f('ix_country_percentage_country'), table_name='country_percentage')
    op.drop_index(op.f('ix_country_percentage_activity_id'), table_name='country_percentage')
    op.drop_table('country_percentage')
    op.drop_index(op.f('ix_website_activity_id'), table_name='website')
    op.drop_table('website')
    op.drop_index(op.f('ix_transaction_activity_id'), table_name='transaction')
    op.drop_table('transaction')
    op.drop_index(op.f('ix_related_activity_activity_id'), table_name='related_activity')
    op.drop_table('related_activity')
    op.drop_index(op.f('ix_policy_marker_code'), table_name='policy_marker')
    op.drop_index(op.f('ix_policy_marker_activity_id'), table_name='policy_marker')
    op.drop_table('policy_marker')
    op.drop_table('participation')
    op.drop_index(op.f('ix_budget_activity_id'), table_name='budget')
    op.drop_table('budget')
    op.drop_index(op.f('ix_activity_resource_url'), table_name='activity')
    op.drop_index(op.f('ix_activity_reporting_org_id'), table_name='activity')
    op.drop_table('activity')
    op.drop_index(op.f('ix_resource_dataset_id'), table_name='resource')
    op.drop_table('resource')
    op.drop_table('organisation')
    op.drop_table('log')
    op.drop_table('deleted_activity')
    op.drop_table('dataset')
    # ### end Alembic commands ###
